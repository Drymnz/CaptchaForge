
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package com.cunoc.CaptchaForge.Model.JflexAndCup.CaptchaDataBase;

import java_cup.runtime.*;
import java.util.ArrayList;
import com.cunoc.CaptchaForge.Model.Analyzer.ErrorTypeInTheInterpreter;
import com.cunoc.CaptchaForge.Model.Analyzer.ReportErrorInterpreter;
import com.cunoc.CaptchaForge.Model.Analyzer.Token;
import com.cunoc.CaptchaForge.Model.JflexAndCup.Report.InterpretSyntaticError;
import com.cunoc.CaptchaForge.Model.WebIdentities.Captcha;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class ParserCaptchaDataBase extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return SymCaptchaDataBase.class;
}

  /** Default constructor. */
  @Deprecated
  public ParserCaptchaDataBase() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public ParserCaptchaDataBase(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public ParserCaptchaDataBase(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\011\000\002\002\004\000\002\002\003\000\002\002" +
    "\004\000\002\002\002\000\002\003\004\000\002\003\003" +
    "\000\002\004\006\000\002\006\006\000\002\005\006" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\024\000\010\002\ufffe\003\004\004\006\001\002\000" +
    "\004\004\006\001\002\000\006\002\000\004\006\001\002" +
    "\000\004\007\012\001\002\000\006\002\ufffc\004\ufffc\001" +
    "\002\000\004\002\011\001\002\000\004\002\001\001\002" +
    "\000\004\006\022\001\002\000\004\010\014\001\002\000" +
    "\004\006\017\001\002\000\004\005\016\001\002\000\006" +
    "\002\ufffb\004\ufffb\001\002\000\004\012\020\001\002\000" +
    "\004\011\021\001\002\000\004\005\ufff9\001\002\000\004" +
    "\012\023\001\002\000\004\011\024\001\002\000\004\010" +
    "\ufffa\001\002\000\006\002\ufffd\004\ufffd\001\002\000\006" +
    "\002\uffff\004\006\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\024\000\010\002\007\003\004\004\006\001\001\000" +
    "\006\003\025\004\006\001\001\000\004\004\024\001\001" +
    "\000\004\006\012\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\005\014" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\004\024\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$ParserCaptchaDataBase$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$ParserCaptchaDataBase$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$ParserCaptchaDataBase$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}




private ArrayList<ReportErrorInterpreter> listError = new ArrayList();
private ArrayList<Captcha> listCaptcha = new ArrayList();
private LexemaCaptchaDataBase lexema;
private String STRING_ID = "";
private String STRING_HTML = "";

	  public ParserCaptchaDataBase(LexemaCaptchaDataBase Lexema) {
        super(Lexema);
        this.lexema = Lexema;
    }

    //erorr
    public void syntax_error(Symbol cur_token) {
        String nameTerminal = symbl_name_from_id(this.cur_token.sym);
        int numberTerminal = this.cur_token.sym;
        ///codigo para el objeto
        ErrorTypeInTheInterpreter type = ErrorTypeInTheInterpreter.SYNTACTIC;
        int line = cur_token.left+1;
        int columna = cur_token.right +1;
        String lexema = (this.cur_token.value!=null)? this.cur_token.value.toString() : "Token no existe";
        Token token =  new Token(line, columna, lexema);
        this.listError.add(new ReportErrorInterpreter(type, token, (new InterpretSyntaticError(this.stack)).descriptionParser(this)));
    }

    //Returnar el listado de errores
    public ArrayList<ReportErrorInterpreter> getListError() {
        return this.listError;
    }

     //Returnar el listado de errores
    public ArrayList<Captcha> getListCaptcha() {
        return this.listCaptcha;
    }

    private void addCaptcha(){
        listCaptcha.add(new Captcha(STRING_ID, STRING_HTML));
        STRING_ID="";
        STRING_HTML = "";
    }

    /**
     * ***END CODE*******
     */


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$ParserCaptchaDataBase$actions {
  private final ParserCaptchaDataBase parser;

  /** Constructor */
  CUP$ParserCaptchaDataBase$actions(ParserCaptchaDataBase parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$ParserCaptchaDataBase$do_action_part00000000(
    int                        CUP$ParserCaptchaDataBase$act_num,
    java_cup.runtime.lr_parser CUP$ParserCaptchaDataBase$parser,
    java.util.Stack            CUP$ParserCaptchaDataBase$stack,
    int                        CUP$ParserCaptchaDataBase$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$ParserCaptchaDataBase$result;

      /* select the action based on the action number */
      switch (CUP$ParserCaptchaDataBase$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= inicio EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$ParserCaptchaDataBase$stack.elementAt(CUP$ParserCaptchaDataBase$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$ParserCaptchaDataBase$stack.elementAt(CUP$ParserCaptchaDataBase$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$ParserCaptchaDataBase$stack.elementAt(CUP$ParserCaptchaDataBase$top-1)).value;
		RESULT = start_val;
              CUP$ParserCaptchaDataBase$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$ParserCaptchaDataBase$stack.elementAt(CUP$ParserCaptchaDataBase$top-1)), ((java_cup.runtime.Symbol)CUP$ParserCaptchaDataBase$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$ParserCaptchaDataBase$parser.done_parsing();
          return CUP$ParserCaptchaDataBase$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // inicio ::= varias_etiquetas_usar 
            {
              Object RESULT =null;

              CUP$ParserCaptchaDataBase$result = parser.getSymbolFactory().newSymbol("inicio",0, ((java_cup.runtime.Symbol)CUP$ParserCaptchaDataBase$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserCaptchaDataBase$stack.peek()), RESULT);
            }
          return CUP$ParserCaptchaDataBase$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // inicio ::= error varias_etiquetas_usar 
            {
              Object RESULT =null;

              CUP$ParserCaptchaDataBase$result = parser.getSymbolFactory().newSymbol("inicio",0, ((java_cup.runtime.Symbol)CUP$ParserCaptchaDataBase$stack.elementAt(CUP$ParserCaptchaDataBase$top-1)), ((java_cup.runtime.Symbol)CUP$ParserCaptchaDataBase$stack.peek()), RESULT);
            }
          return CUP$ParserCaptchaDataBase$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // inicio ::= 
            {
              Object RESULT =null;

              CUP$ParserCaptchaDataBase$result = parser.getSymbolFactory().newSymbol("inicio",0, ((java_cup.runtime.Symbol)CUP$ParserCaptchaDataBase$stack.peek()), RESULT);
            }
          return CUP$ParserCaptchaDataBase$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // varias_etiquetas_usar ::= varias_etiquetas_usar etiqueta_inicial 
            {
              Object RESULT =null;

              CUP$ParserCaptchaDataBase$result = parser.getSymbolFactory().newSymbol("varias_etiquetas_usar",1, ((java_cup.runtime.Symbol)CUP$ParserCaptchaDataBase$stack.elementAt(CUP$ParserCaptchaDataBase$top-1)), ((java_cup.runtime.Symbol)CUP$ParserCaptchaDataBase$stack.peek()), RESULT);
            }
          return CUP$ParserCaptchaDataBase$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // varias_etiquetas_usar ::= etiqueta_inicial 
            {
              Object RESULT =null;

              CUP$ParserCaptchaDataBase$result = parser.getSymbolFactory().newSymbol("varias_etiquetas_usar",1, ((java_cup.runtime.Symbol)CUP$ParserCaptchaDataBase$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserCaptchaDataBase$stack.peek()), RESULT);
            }
          return CUP$ParserCaptchaDataBase$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // etiqueta_inicial ::= CapTcha etiqueta_id etiqueta_html FinCapTcha 
            {
              Object RESULT =null;
		
addCaptcha();

              CUP$ParserCaptchaDataBase$result = parser.getSymbolFactory().newSymbol("etiqueta_inicial",2, ((java_cup.runtime.Symbol)CUP$ParserCaptchaDataBase$stack.elementAt(CUP$ParserCaptchaDataBase$top-3)), ((java_cup.runtime.Symbol)CUP$ParserCaptchaDataBase$stack.peek()), RESULT);
            }
          return CUP$ParserCaptchaDataBase$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // etiqueta_id ::= ID EQUAL START_HARVESTING OUT_HARVESTING 
            {
              Object RESULT =null;
		
STRING_ID = lexema.getDataCollected().replaceAll("\\s+", "");
lexema.setDataCollected("");

              CUP$ParserCaptchaDataBase$result = parser.getSymbolFactory().newSymbol("etiqueta_id",4, ((java_cup.runtime.Symbol)CUP$ParserCaptchaDataBase$stack.elementAt(CUP$ParserCaptchaDataBase$top-3)), ((java_cup.runtime.Symbol)CUP$ParserCaptchaDataBase$stack.peek()), RESULT);
            }
          return CUP$ParserCaptchaDataBase$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // etiqueta_html ::= HTML EQUAL START_HARVESTING OUT_HARVESTING 
            {
              Object RESULT =null;
		
STRING_HTML = lexema.getDataCollected();
lexema.setDataCollected("");

              CUP$ParserCaptchaDataBase$result = parser.getSymbolFactory().newSymbol("etiqueta_html",3, ((java_cup.runtime.Symbol)CUP$ParserCaptchaDataBase$stack.elementAt(CUP$ParserCaptchaDataBase$top-3)), ((java_cup.runtime.Symbol)CUP$ParserCaptchaDataBase$stack.peek()), RESULT);
            }
          return CUP$ParserCaptchaDataBase$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$ParserCaptchaDataBase$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$ParserCaptchaDataBase$do_action(
    int                        CUP$ParserCaptchaDataBase$act_num,
    java_cup.runtime.lr_parser CUP$ParserCaptchaDataBase$parser,
    java.util.Stack            CUP$ParserCaptchaDataBase$stack,
    int                        CUP$ParserCaptchaDataBase$top)
    throws java.lang.Exception
    {
              return CUP$ParserCaptchaDataBase$do_action_part00000000(
                               CUP$ParserCaptchaDataBase$act_num,
                               CUP$ParserCaptchaDataBase$parser,
                               CUP$ParserCaptchaDataBase$stack,
                               CUP$ParserCaptchaDataBase$top);
    }
}

}
